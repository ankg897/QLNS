/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

/**
 *
 * @author Khach
 */
import Database.PhongBanDB;
import Model.NhanVien;
import Model.PhongBan;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PhongBanView extends javax.swing.JFrame {

    /**
     * Creates new form PhongBanView
     */
    public PhongBanView() {
        initComponents();
    }
    public ArrayList<PhongBan> list;
    public ArrayList<NhanVien> list2;
    public DefaultTableModel model;
    public DefaultTableModel nhanModel;
    int index;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MaPB = new javax.swing.JTextField();
        TenPB = new javax.swing.JTextField();
        Them = new javax.swing.JButton();
        Xoa = new javax.swing.JButton();
        Sua = new javax.swing.JButton();
        InPB = new javax.swing.JButton();
        Dangxuat = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        NhanVienTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        Timkiem = new javax.swing.JTextField();
        Tim = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Quanlynhansu = new javax.swing.JMenuItem();
        Tinhluong = new javax.swing.JCheckBoxMenuItem();
        hopdong = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MaPB", "TenPB"
            }
        ));
        ResultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResultTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ResultTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Mã phòng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Tên phòng");

        Them.setText("Thêm");
        Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemActionPerformed(evt);
            }
        });

        Xoa.setText("Xóa");
        Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaActionPerformed(evt);
            }
        });

        Sua.setText("Sửa");
        Sua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuaMouseClicked(evt);
            }
        });
        Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaActionPerformed(evt);
            }
        });

        InPB.setText("In phòng ban");
        InPB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InPBActionPerformed(evt);
            }
        });

        Dangxuat.setForeground(new java.awt.Color(255, 51, 51));
        Dangxuat.setText("Đăng xuất");
        Dangxuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DangxuatActionPerformed(evt);
            }
        });

        NhanVienTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MaNV", "Hoten", "Vitri", "BoPhan", "Sinh", "GioiTinh", "Email", "SDT"
            }
        ));
        jScrollPane2.setViewportView(NhanVienTable);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Tìm kiếm");

        Timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimkiemActionPerformed(evt);
            }
        });

        Tim.setText("Tìm");
        Tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        Quanlynhansu.setText("Quản lý nhân sự");
        Quanlynhansu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuanlynhansuActionPerformed(evt);
            }
        });
        jMenu1.add(Quanlynhansu);

        Tinhluong.setSelected(true);
        Tinhluong.setText("Tính lương");
        Tinhluong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TinhluongActionPerformed(evt);
            }
        });
        jMenu1.add(Tinhluong);

        hopdong.setSelected(true);
        hopdong.setText("Quản lý hợp đồng");
        hopdong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hopdongActionPerformed(evt);
            }
        });
        jMenu1.add(hopdong);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(MaPB)
                                        .addComponent(TenPB, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(Tim))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Them, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InPB)
                                    .addComponent(Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(Dangxuat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1024, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TenPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Tim))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Them)
                            .addComponent(Xoa))
                        .addGap(49, 49, 49))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(Sua))
                            .addComponent(InPB))
                        .addGap(46, 46, 46)
                        .addComponent(Dangxuat))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void ShowTable() {
        model = (DefaultTableModel) ResultTable.getModel();
        model.setRowCount(0);
        list = new PhongBanDB().listPhongBan();
        for (PhongBan nv : list) {
            model.addRow(new Object[]{nv.getMaPB(), nv.getTenPB()});
        }
    }
  private void ShowTable2() {      
        nhanModel = (DefaultTableModel) NhanVienTable.getModel();
        nhanModel.setRowCount(0);
        list2 = new PhongBanDB().listNhanVien(TenPB.getText());
        for (NhanVien nv : list2) {
            nhanModel.addRow(new Object[]{nv.getMaNv(), nv.getHoten(), nv.getVitri(), nv.getBophan(), nv.getNgayThangNamSinh(), nv.getGioitinh()
            , nv.getEmail(), nv.getSdt()});
        }
    }
    public boolean CheckMaTen() {
        String a = MaPB.getText();
        String b = TenPB.getText();
        for (int i = 2; i < a.length(); i++) {
            if (a.charAt(0) != 'P' || a.charAt(1) != 'B' || !Character.isDigit(a.charAt(i))) {
                return false;
            }
        }
        for (int i = 0; i < b.length(); i++) {
            if (Character.isDigit(b.charAt(i))) {
                return false;
            }
        }
        return true;
    }
    private void ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemActionPerformed
        // TODO add your handling code here:
        if(CheckMaTen()){
            PhongBan nv = new PhongBan();
            nv.setMaPB(MaPB.getText());
            nv.setTenPB(TenPB.getText());
            PhongBanDB pb= new PhongBanDB();
            pb.AddPhongBan(nv);
            ShowTable();
        }
    }//GEN-LAST:event_ThemActionPerformed

    private void InPBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InPBActionPerformed
        // TODO add your handling code here:
        ShowTable();
    }//GEN-LAST:event_InPBActionPerformed

    private void XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaActionPerformed
        // TODO add your handling code here:
        index = ResultTable.getSelectedRow();
        PhongBan db = list.get(index);               
        PhongBanDB nvd = new PhongBanDB();
        int option = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa phòng ban này?", "Xóa phòng ban", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            nvd.DeletePB(db.getMaPB());
        }
        ShowTable();
    }//GEN-LAST:event_XoaActionPerformed

    private void ResultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResultTableMouseClicked
        // TODO add your handling code here:
        index = ResultTable.getSelectedRow();
        PhongBan db = list.get(index); 
        MaPB.setText(db.getMaPB());
        TenPB.setText(db.getTenPB());
        ShowTable2();
    }//GEN-LAST:event_ResultTableMouseClicked

    private void SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaActionPerformed
        // TODO add your handling code here:
         try {
            index = ResultTable.getSelectedRow();
            PhongBan nv = list.get(index); // lấy dòng ra           
            new PhongBanDB().DeletePB(nv.getMaPB());
            if (CheckMaTen()) {
                nv.setMaPB(MaPB.getText());
                nv.setTenPB(TenPB.getText());   
                new PhongBanDB().AddPhongBan(nv);
                ShowTable();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Thông tin không hợp lệ");
        }
    }//GEN-LAST:event_SuaActionPerformed

    private void SuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SuaMouseClicked

    private void DangxuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DangxuatActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(this, "Bạn muốn đăng xuất", "Thông báo", JOptionPane.YES_NO_OPTION);
        if(a == JOptionPane.YES_OPTION){
            new Login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_DangxuatActionPerformed

    private void QuanlynhansuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuanlynhansuActionPerformed
        // TODO add your handling code here:
        new NhanVienView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_QuanlynhansuActionPerformed

    private void TinhluongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TinhluongActionPerformed
        // TODO add your handling code here:
        new Tinhluong().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_TinhluongActionPerformed

    private void TimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimkiemActionPerformed
        // TODO add your handling code here:
             
    }//GEN-LAST:event_TimkiemActionPerformed

    private void TimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) ResultTable.getModel();
        String a = Timkiem.getText();
        if(a.length() > 0){
            PhongBanDB pbd = new PhongBanDB();
            list = pbd.FindByName(a);
            model.setRowCount(0);
            for(PhongBan pb : list)
            model.addRow(new Object[] {pb.getMaPB(), pb.getTenPB()});
        }
    }//GEN-LAST:event_TimActionPerformed

    private void hopdongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hopdongActionPerformed
        // TODO add your handling code here:
        new HopDongView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_hopdongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhongBanView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhongBanView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhongBanView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhongBanView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhongBanView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Dangxuat;
    private javax.swing.JButton InPB;
    private javax.swing.JTextField MaPB;
    private javax.swing.JTable NhanVienTable;
    private javax.swing.JMenuItem Quanlynhansu;
    private javax.swing.JTable ResultTable;
    private javax.swing.JButton Sua;
    private javax.swing.JTextField TenPB;
    private javax.swing.JButton Them;
    private javax.swing.JButton Tim;
    private javax.swing.JTextField Timkiem;
    private javax.swing.JCheckBoxMenuItem Tinhluong;
    private javax.swing.JButton Xoa;
    private javax.swing.JCheckBoxMenuItem hopdong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
